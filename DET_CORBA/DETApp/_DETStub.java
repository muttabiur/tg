package DETApp;


/**
* DETApp/_DETStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from DET.idl
* Wednesday, March 18, 2009 1:29:10 o'clock AM EDT
*/

public class _DETStub extends org.omg.CORBA.portable.ObjectImpl implements DETApp.DET
{

  public void getRequest (String versionName, String commName, int reqID, String argument)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getRequest", true);
                $out.write_string (versionName);
                $out.write_string (commName);
                $out.write_long (reqID);
                $out.write_string (argument);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                getRequest (versionName, commName, reqID, argument        );
            } finally {
                _releaseReply ($in);
            }
  } // getRequest

  public double SnmpSetBalance ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("SnmpSetBalance", true);
                $in = _invoke ($out);
                double $result = $in.read_double ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return SnmpSetBalance (        );
            } finally {
                _releaseReply ($in);
            }
  } // SnmpSetBalance

  public int SnmpSetQuantity ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("SnmpSetQuantity", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return SnmpSetQuantity (        );
            } finally {
                _releaseReply ($in);
            }
  } // SnmpSetQuantity

  public int buyItem (String item, int qty)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("buyItem", true);
                $out.write_string (item);
                $out.write_long (qty);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return buyItem (item, qty        );
            } finally {
                _releaseReply ($in);
            }
  } // buyItem

  public int printReport ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("printReport", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return printReport (        );
            } finally {
                _releaseReply ($in);
            }
  } // printReport

  public int printReportAfterTransaction ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("printReportAfterTransaction", true);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return printReportAfterTransaction (        );
            } finally {
                _releaseReply ($in);
            }
  } // printReportAfterTransaction

  public void trapBalance ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("trapBalance", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                trapBalance (        );
            } finally {
                _releaseReply ($in);
            }
  } // trapBalance

  public void trapQuantity ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("trapQuantity", true);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                trapQuantity (        );
            } finally {
                _releaseReply ($in);
            }
  } // trapQuantity

  public void setRequestForBalance (String versionName, String commName, int reqID, String argument)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setRequestForBalance", true);
                $out.write_string (versionName);
                $out.write_string (commName);
                $out.write_long (reqID);
                $out.write_string (argument);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setRequestForBalance (versionName, commName, reqID, argument        );
            } finally {
                _releaseReply ($in);
            }
  } // setRequestForBalance

  public void setRequestForQuantity (String versionName, String commName, int reqID, int argument)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("setRequestForQuantity", true);
                $out.write_string (versionName);
                $out.write_string (commName);
                $out.write_long (reqID);
                $out.write_long (argument);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                setRequestForQuantity (versionName, commName, reqID, argument        );
            } finally {
                _releaseReply ($in);
            }
  } // setRequestForQuantity


  //long sellItem(int String item, in long qty,in double bal);
  public int sellItem (int qty, double bal)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("sellItem", true);
                $out.write_long (qty);
                $out.write_double (bal);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return sellItem (qty, bal        );
            } finally {
                _releaseReply ($in);
            }
  } // sellItem

  public int tradeItems (String item1, int qty1, String item2, int qty2, String etrader)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("tradeItems", true);
                $out.write_string (item1);
                $out.write_long (qty1);
                $out.write_string (item2);
                $out.write_long (qty2);
                $out.write_string (etrader);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return tradeItems (item1, qty1, item2, qty2, etrader        );
            } finally {
                _releaseReply ($in);
            }
  } // tradeItems

  public void addGenericTrapType (int genType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addGenericTrapType", true);
                $out.write_long (genType);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addGenericTrapType (genType        );
            } finally {
                _releaseReply ($in);
            }
  } // addGenericTrapType

  public void signalTrapTypeGeneric (String trapType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("signalTrapTypeGeneric", true);
                $out.write_string (trapType);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                signalTrapTypeGeneric (trapType        );
            } finally {
                _releaseReply ($in);
            }
  } // signalTrapTypeGeneric

  public String getTrapNameGeneric ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTrapNameGeneric", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTrapNameGeneric (        );
            } finally {
                _releaseReply ($in);
            }
  } // getTrapNameGeneric

  public void addSpecificTrapType (int speType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("addSpecificTrapType", true);
                $out.write_long (speType);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                addSpecificTrapType (speType        );
            } finally {
                _releaseReply ($in);
            }
  } // addSpecificTrapType

  public void signalTrapTypeSpecific (String trapType)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("signalTrapTypeSpecific", true);
                $out.write_string (trapType);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                signalTrapTypeSpecific (trapType        );
            } finally {
                _releaseReply ($in);
            }
  } // signalTrapTypeSpecific

  public String getTrapNameSpecific ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getTrapNameSpecific", true);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getTrapNameSpecific (        );
            } finally {
                _releaseReply ($in);
            }
  } // getTrapNameSpecific

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:DETApp/DET:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.Object obj = org.omg.CORBA.ORB.init (args, props).string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     String str = org.omg.CORBA.ORB.init (args, props).object_to_string (this);
     s.writeUTF (str);
  }
} // class _DETStub
